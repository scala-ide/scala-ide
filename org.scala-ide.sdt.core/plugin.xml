<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.2"?>
<plugin>
   <extension-point id="reconciliationParticipants" name="Reconcilation Participants" schema="schema/reconciliationParticipants.exsd"/>
   <extension-point id="sourcefileprovider" name="Source file Providers" schema="schema/sourceFileProviders.exsd"/>
   <extension-point id="scalaHoverDebugOverride" name="Scala Hover Debug Override" schema="schema/scalaHoverDebugOverride.exsd"/>
   <extension-point id="fileCreator" name="File Creator" schema="schema/fileCreator.exsd"/>
   <extension
         point="org.eclipse.ui.propertyPages">
      <page
            class="org.scalaide.ui.internal.preferences.CompilerSettings"
            id="org.scalaide.ui.preferences.compiler"
            name="Scala Compiler">
         <filter
               name="nature"
               value="org.scala-ide.sdt.core.scalanature">
         </filter>
         <enabledWhen>
            <or>
               <instanceof
                     value="org.eclipse.jdt.core.IJavaProject">
               </instanceof>
               <instanceof
                     value="org.eclipse.core.resources.IProject">
               </instanceof>
            </or>
         </enabledWhen>
      </page>
      <page
            class="org.scalaide.ui.internal.preferences.FormatterPreferencePage"
            id="org.scalaide.ui.preferences.editor.formatter"
            name="Scala Formatter">
         <filter
               name="nature"
               value="org.scala-ide.sdt.core.scalanature">
         </filter>
         <enabledWhen>
            <or>
               <instanceof
                     value="org.eclipse.jdt.core.IJavaProject">
               </instanceof>
               <instanceof
                     value="org.eclipse.core.resources.IProject">
               </instanceof>
            </or>
         </enabledWhen>
      </page>
      <page
            class="org.scalaide.ui.internal.preferences.OrganizeImportsPreferencesPage"
            id="org.scalaide.ui.preferences.editor.organizeImports"
            name="Scala Organize Imports">
         <filter
               name="nature"
               value="org.scala-ide.sdt.core.scalanature">
         </filter>
         <enabledWhen>
            <or>
               <instanceof
                     value="org.eclipse.jdt.core.IJavaProject">
               </instanceof>
               <instanceof
                     value="org.eclipse.core.resources.IProject">
               </instanceof>
            </or>
         </enabledWhen>
      </page>
   </extension>

   <extension point="org.eclipse.ui.preferencePages">
      <page class="org.scalaide.ui.internal.preferences.ScalaPreferences"
            name="Scala"
            id="org.scalaide.ui.preferences"/>
      <page class="org.scalaide.ui.internal.preferences.SyntaxColoringPreferencePage"
            category="org.scalaide.ui.preferences.editor"
            name="Syntax Coloring"
            id="org.scalaide.ui.preferences.editor.highlighting"/>
      <page
            category="org.scalaide.ui.preferences"
            class="org.scalaide.ui.internal.preferences.CompilerSettings"
            id="org.scalaide.ui.preferences.compiler"
            name="Compiler">
      </page>
      <page
            category="org.scalaide.ui.preferences.editor"
            class="org.scalaide.ui.internal.preferences.FormatterPreferencePage"
            id="org.scalaide.ui.preferences.editor.formatter"
            name="Formatter">
      </page>
      <page
            category="org.scalaide.ui.preferences.editor"
            class="org.scalaide.ui.internal.templates.TemplatePreferences"
            id="org.scalaide.ui.preferences.editor.templates"
            name="Templates">
      </page>
      <page
            category="org.scalaide.ui.preferences.editor"
            class="org.scalaide.ui.internal.preferences.OrganizeImportsPreferencesPage"
            id="org.scalaide.ui.preferences.editor.organizeImports"
            name="Organize Imports">
      </page>
      <page
            category="org.scalaide.ui.preferences.editor"
            class="org.scalaide.ui.internal.preferences.ImplicitsPreferencePage"
            id="org.scalaide.ui.preferences.editor.implicits"
            name="Implicits">
      </page>
      <page
            category="org.scalaide.ui.preferences"
            class="org.scalaide.logging.ui.preferences.LoggingPreferencePage"
            id="org.scalaide.ui.preferences.logging"
            name="Logging">
      </page>
      <page
            category="org.scalaide.ui.preferences"
            class="org.scalaide.ui.internal.preferences.EditorPreferencePage"
            id="org.scalaide.ui.preferences.editor"
            name="Editor">
      </page>
      <page
            category="org.scalaide.ui.preferences"
            class="org.scalaide.ui.internal.preferences.InstalledScalasPreferencePage"
            id="org.scalaide.ui.preferences.scalas"
            name="Installations">
      </page>
   </extension>

  <extension point="org.eclipse.core.contenttype.contentTypes">
    <content-type id="scala.tools.eclipse.scalaSource" name="Scala Source File"
      base-type="org.eclipse.jdt.core.javaSource"
      priority="high"
      file-extensions="scala"/>
    <content-type id="scala.tools.eclipse.scalaClass" name="Scala Class File"
      base-type="org.eclipse.jdt.core.javaClass"
      priority="high"
      file-extensions="class">
      <describer class="org.scalaide.core.internal.jdt.model.ScalaClassFileDescriber"/>
    </content-type>
  </extension>

   <extension
         point="org.eclipse.ui.editors">
      <editor
            name="Scala Editor"
            default="true"
            icon="icons/full/obj16/scu_obj.gif"
            extensions="scala"
            contributorClass="org.eclipse.jdt.internal.ui.javaeditor.CompilationUnitEditorActionContributor"
            class="org.scalaide.ui.internal.editor.ScalaSourceFileEditor"
            symbolicFontName="org.eclipse.jdt.ui.editors.textfont"
            id="scala.tools.eclipse.ScalaSourceFileEditor">
            <contentTypeBinding contentTypeId="scala.tools.eclipse.scalaSource"/>
      </editor>
      <editor
            name="Scala Class File Viewer"
            default="true"
            icon="icons/full/obj16/sclassf_obj.gif"
            contributorClass="org.eclipse.jdt.internal.ui.javaeditor.ClassFileEditorActionContributor"
            class="org.scalaide.ui.internal.editor.ScalaClassFileEditor"
            symbolicFontName="org.eclipse.jdt.ui.editors.textfont"
            id="scala.tools.eclipse.ScalaClassFileEditor">
            <contentTypeBinding contentTypeId="scala.tools.eclipse.scalaClass"/>
      </editor>
   </extension>

   <!-- Breakpoints for scala source/class editors -->

   <extension point="org.eclipse.ui.editorActions">
      <editorContribution
         targetID="scala.tools.eclipse.ScalaSourceFileEditor"
         id="org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions">
         <action
            label="Toggle &amp;Breakpoint"
            class="org.eclipse.debug.ui.actions.RulerToggleBreakpointActionDelegate"
            actionID="RulerDoubleClick"
            id="org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction">
         </action>
         <action
            label="Scala Editor Bookmark Ruler Action"
            helpContextId="org.eclipse.ui.bookmark_action_context"
            class="org.eclipse.ui.texteditor.BookmarkRulerAction"
            actionID="RulerDoubleClick"
            id="org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction">
         </action>
         <action
            label="Scala Editor Ruler Single-Click"
            class="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction"
            actionID="RulerClick"
            id="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction">
         </action>
      </editorContribution>
   </extension>

   <extension point="org.eclipse.ui.editorActions">
      <editorContribution
         targetID="scala.tools.eclipse.ScalaClassFileEditor"
         id="org.eclipse.jdt.debug.CompilationUnitEditor.BreakpointRulerActions">
         <action
            label="Toggle &amp;Breakpoint"
            class="org.eclipse.debug.ui.actions.RulerToggleBreakpointActionDelegate"
            actionID="RulerDoubleClick"
            id="org.eclipse.jdt.debug.ui.actions.ManageBreakpointRulerAction">
         </action>
         <action
            label="Scala Editor Bookmark Ruler Action"
            helpContextId="org.eclipse.ui.bookmark_action_context"
            class="org.eclipse.ui.texteditor.BookmarkRulerAction"
            actionID="RulerDoubleClick"
            id="org.eclipse.jdt.internal.ui.javaeditor.BookmarkRulerAction">
         </action>
         <action
            label="Scala Editor Ruler Single-Click"
            class="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction"
            actionID="RulerClick"
            id="org.eclipse.jdt.internal.ui.javaeditor.JavaSelectRulerAction">
         </action>
      </editorContribution>
   </extension>

   <extension point="org.eclipse.core.runtime.adapters">
     <factory
       class="org.scalaide.ui.internal.editor.ScalaRetargettableActionAdapterFactory"
       adaptableType="org.scalaide.ui.internal.editor.ScalaSourceFileEditor">
       <adapter type="org.eclipse.debug.ui.actions.IRunToLineTarget"/>
       <adapter type="org.eclipse.debug.ui.actions.IToggleBreakpointsTarget"/>
     </factory>
   </extension>
   <extension point="org.eclipse.core.runtime.adapters">
     <factory
       class="org.scalaide.ui.internal.editor.ScalaRetargettableActionAdapterFactory"
       adaptableType="org.scalaide.ui.internal.editor.ScalaClassFileEditor">
       <adapter type="org.eclipse.debug.ui.actions.IRunToLineTarget"/>
       <adapter type="org.eclipse.debug.ui.actions.IToggleBreakpointsTarget"/>
     </factory>
   </extension>
   <!-- end of extensions for breakpoints -->


   <extension point = "org.eclipse.ui.actionSets">
     <actionSet id="org.scala-ide.sdt.ui.scalaMenu.actionSet"
       label="Scala Diagnostics"
       visible="false">
       <menu id="org_scala-ide_sdt_ui_menu"
         label="Scala"
         path="additions">
         <groupMarker name="diagnostics"/>
         <groupMarker name="additions"/>
       </menu>
       <action id="org.scala-ide.sdt.ui.runDiag.action"
         label="Run Setup Diagnostics"
         menubarPath="org_scala-ide_sdt_ui_menu/diagnostics"
         tooltip="Verify that Scala configuration is correct"
         class="org.scalaide.ui.internal.actions.RunDiagnosticAction"
         enablesFor="*">
       </action>
       <action id="org.scala-ide.sdt.ui.reportBug.action"
         label="Report a Bug"
         menubarPath="org_scala-ide_sdt_ui_menu/additions"
         tooltip="Report a bug in the Scala Development Tools"
         class="org.scalaide.ui.internal.actions.RunDiagnosticAction"
         enablesFor="*">
       </action>
       <action id="org.scala-ide.sdt.ui.openLogFile.action"
         label="Open the Log"
         menubarPath="org_scala-ide_sdt_ui_menu/additions"
         tooltip="Open the Log file in an editor"
         class="org.scalaide.ui.internal.actions.RunDiagnosticAction"
         enablesFor="*">
       </action>
     </actionSet>
   </extension>


   <extension
      id="ScalaDocumentSetupParticipant"
      name="ScalaDocumentSetupParticipant"
      point="org.eclipse.core.filebuffers.documentSetup">
      <participant
         contentTypeId="scala.tools.eclipse.scalaSource"
         class="org.eclipse.jdt.internal.ui.javaeditor.JavaDocumentSetupParticipant">
      </participant>
   </extension>
   <extension point="org.eclipse.ui.perspectives">
      <perspective
            class="org.scalaide.ui.internal.PerspectiveFactory"
            name="Scala"
            icon="icons/full/eview16/sperspective.gif"
            id="org.scala-ide.sdt.core.perspective">
      </perspective>
   </extension>
     <extension
         point="org.eclipse.ui.newWizards">
      <category
            id="org.scala-ide.sdt.core.wizards"
            name="Scala Wizards"/>
      <wizard
            icon="icons/full/etool16/newsprj_wiz.gif"
            class="org.scalaide.ui.internal.wizards.ScalaProjectWizard"
            finalPerspective="org.scala-ide.sdt.core.perspective"
            category="org.scala-ide.sdt.core.wizards"
            project="true"
            name="Scala Project"
            id="org.scala-ide.sdt.core.wizards.newProject">
            <description>Create a Scala project</description>
      </wizard>
      <wizard
            class="org.scalaide.ui.internal.wizards.NewClassWizard"
            icon="icons/full/etool16/newclass_wiz.gif"
            finalPerspective="org.scala-ide.sdt.core.perspective"
            category="org.scala-ide.sdt.core.wizards"
            project="false"
            name="Scala Class"
            id="org.scala-ide.sdt.core.wizards.newClass">
            <description>Create a Scala class</description>
            <selection class="java.lang.Object"/>
      </wizard>
      <wizard
            class="org.scalaide.ui.internal.wizards.NewObjectWizard"
            icon="icons/full/etool16/newobject_wiz.gif"
            finalPerspective="org.scala-ide.sdt.core.perspective"
            category="org.scala-ide.sdt.core.wizards"
            project="false"
            name="Scala Object"
            id="org.scala-ide.sdt.core.wizards.newObject">
            <description>Create a Scala object</description>
            <selection class="java.lang.Object"/>
      </wizard>
      <wizard
            class="org.scalaide.ui.internal.wizards.NewPackageObjectWizard"
            icon="icons/full/etool16/newpackage_object_wiz.png"
            finalPerspective="org.scala-ide.sdt.core.perspective"
            category="org.scala-ide.sdt.core.wizards"
            project="false"
            name="Scala Package Object"
            id="org.scala-ide.sdt.core.wizards.newPackageObject">
            <description>Create a Scala Package Object</description>
            <selection class="java.lang.Object"/>
      </wizard>
      <wizard
            class="org.scalaide.ui.internal.wizards.NewTraitWizard"
            icon="icons/full/etool16/newtrait_wiz.gif"
            finalPerspective="org.scala-ide.sdt.core.perspective"
            category="org.scala-ide.sdt.core.wizards"
            project="false"
            name="Scala Trait"
            id="org.scala-ide.sdt.core.wizards.newTrait">
            <description>Create a Scala trait</description>
            <selection class="java.lang.Object"/>
      </wizard>
      <wizard
            class="org.scalaide.ui.internal.wizards.NewApplicationWizard"
            icon="icons/full/etool16/scala_app.gif"
            finalPerspective="org.scala-ide.sdt.core.perspective"
            category="org.scala-ide.sdt.core.wizards"
            project="false"
            name="Scala Application"
            id="org.scala-ide.sdt.core.wizards.newApplication">
            <description>Create a Scala application</description>
            <selection class="java.lang.Object"/>
      </wizard>
   </extension>
   <extension
         point="org.eclipse.ui.ide.projectNatureImages">
      <image
            natureId="org.scala-ide.sdt.core.scalanature"
            icon="icons/full/ovr16/scala_co.gif"
            id="org.scala-ide.sdt.core.scalaNatureImage"/>
   </extension>

   <extension
         id="problem"
         name="Scala Problem"
         point="org.eclipse.core.resources.markers">
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.core.resources.textmarker"/>
      <super type="org.eclipse.jdt.core.problem"/>
      <persistent value="true"/>
   </extension>

   <extension
         id="classpathProblem"
         name="Scala Classpath Problem"
         point="org.eclipse.core.resources.markers">
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.jdt.core.problem"/>
      <persistent value="true"/>
   </extension>

   <extension
         id="scalaVersionProblem"
         name="Scala Version Problem"
         point="org.eclipse.core.resources.markers">
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.jdt.core.problem"/>
      <super type="org.scala-ide.sdt.core.classpathProblem"/>
      <persistent value="true"/>
   </extension>

   <extension
         id="settingProblem"
         name="Scala Setting Problem"
         point="org.eclipse.core.resources.markers">
      <super type="org.eclipse.core.resources.problemmarker"/>
      <super type="org.eclipse.jdt.core.problem"/>
      <persistent value="true"/>
   </extension>
   <extension
         id="task"
         name="Scala task"
         point="org.eclipse.core.resources.markers">
      <super
            type="org.eclipse.jdt.core.task">
      </super>
      <persistent
            value="true">
      </persistent>
   </extension>

   <extension
         point="org.eclipse.ui.editors.annotationTypes">
      <type
         name="org.eclipse.jdt.ui.error"
         super="org.eclipse.ui.workbench.texteditor.error"
         markerType="org.scala-ide.sdt.core.problem"
         markerSeverity="2">
      </type>
      <type
         name="org.eclipse.jdt.ui.warning"
         super="org.eclipse.ui.workbench.texteditor.warning"
         markerType="org.scala-ide.sdt.core.problem"
         markerSeverity="1">
      </type>
      <type
         name="org.eclipse.jdt.ui.info"
         super="org.eclipse.ui.workbench.texteditor.info"
         markerType="org.scala-ide.sdt.core.problem"
         markerSeverity="0">
      </type>
      <type
            name="scala.tools.eclipse.semantichighlighting.implicits.implicitConversionsOrArgsAnnotation"/>
      <type
            markerType="org.scalaide.refactoring.extractionScope"
            name="org.scalaide.refactoring.extractionScope"/>
   </extension>

   <extension
         point="org.eclipse.ui.editors.markerAnnotationSpecification">
     <specification
          annotationType="scala.tools.eclipse.semantichighlighting.implicits.implicitConversionsOrArgsAnnotation"
          colorPreferenceKey="scala.tools.eclipse.ui.preferences.implicit.color"
          colorPreferenceValue="153,153,153"
          contributesToHeader="false"
          includeOnPreferencePage="true"
          icon="icons/full/elcl16/implicit_co.gif"
          label="Scala Implicit"
          overviewRulerPreferenceKey="scala.tools.eclipse.ui.preferences.implicit.rulers.overview"
          overviewRulerPreferenceValue="false"
          presentationLayer="5"
          symbolicIcon="info"
          textPreferenceKey="scala.tools.eclipse.ui.preferences.implicit.text"
          textPreferenceValue="true"
          textStylePreferenceKey="scala.tools.eclipse.ui.preferences.implicit.textStylePreference"
          textStylePreferenceValue="UNDERLINE"
          verticalRulerPreferenceKey="scala.tools.eclipse.ui.preferences.implicit.rulers.vertical"
          verticalRulerPreferenceValue="true">
     </specification>
     <specification
          annotationType="org.scalaide.refactoring.extractionScope"
          colorPreferenceKey="extractionScope.color"
          colorPreferenceValue="192,255,192"
          contributesToHeader="false"
          highlightPreferenceKey="extractionScope.highlight"
          highlightPreferenceValue="true"
          includeOnPreferencePage="true"
          label="Code Selection Marker"
          overviewRulerPreferenceKey="extractionScopeOverview"
          overviewRulerPreferenceValue="true"
          presentationLayer="0"
          textPreferenceKey="extractionScope.text"
          textPreferenceValue="true"
          textStylePreferenceValue="BOX"
          verticalRulerPreferenceKey="extractionScope.ruler"
          verticalRulerPreferenceValue="true">
     </specification>
   </extension>

   <extension
     id="org.scalaide.refactoring.extractionScope"
     name="Extraction Scope"
     point="org.eclipse.core.resources.markers">
     <super
       type="org.eclipse.core.resources.textmarker"/>
   </extension>

    <extension
         point="org.eclipse.jdt.core.classpathContainerInitializer">
      <classpathContainerInitializer
            class="org.scalaide.core.internal.containers.ScalaCompilerClasspathContainerInitializer"
            id="org.scala-ide.sdt.launching.SCALA_COMPILER_CONTAINER">
      </classpathContainerInitializer>
      <classpathContainerInitializer
            class="org.scalaide.core.internal.containers.ScalaLibraryClasspathContainerInitializer"
            id="org.scala-ide.sdt.launching.SCALA_CONTAINER">
      </classpathContainerInitializer>
   </extension>
   <extension point="org.eclipse.jdt.ui.classpathContainerPage">
      <classpathContainerPage
         id="org.scala-ide.sdt.launching.SCALA_COMPILER_CONTAINER"
         name="Scala Compiler"
         class="org.scalaide.core.internal.containers.ScalaCompilerClasspathContainerPage">
      </classpathContainerPage>
      <classpathContainerPage
         id="org.scala-ide.sdt.launching.SCALA_CONTAINER"
         name="Scala Library"
         class="org.scalaide.core.internal.containers.ScalaLibraryClasspathContainerPage">
      </classpathContainerPage>
   </extension>
   <extension point="org.eclipse.ui.ide.markerResolution">
   <markerResolutionGenerator markerType="org.scala-ide.sdt.core.scalaVersionProblem" class="org.scalaide.core.internal.quickfix.BadScalaVersionMarkerResolver">
   </markerResolutionGenerator>
   </extension>
   <extension point="org.eclipse.debug.core.statusHandlers">
      <statusHandler
       id="GenericHandler"
       class="org.scalaide.ui.internal.handlers.GenericExceptionStatusHandler"
       plugin="org.scala-ide.sdt.core"
       code="1010">
     </statusHandler>
     <statusHandler
       id="MissingScalaRequirement"
       class="org.scalaide.ui.internal.handlers.MissingScalaRequirementHandler"
       plugin="org.scala-ide.sdt.core"
       code="1002">
     </statusHandler>
     <statusHandler
       id="CompilerLaunchError"
       class="org.scalaide.ui.internal.handlers.CompilerLaunchErrorHandler"
       plugin="org.scala-ide.sdt.core"
       code="1003">
     </statusHandler>
   </extension>
   <extension point = "org.eclipse.debug.core.launchConfigurationTypes">
     <launchConfigurationType
           id="scala.application"
           delegate="org.scalaide.core.internal.launching.ScalaLaunchDelegate"
           delegateDescription="The Scala JVM Launcher supports running and debugging of local Scala applications compiled to the JVM"
           delegateName="Scala JVM Launcher"
           modes="run, debug"
           name="Scala Application"
           public="true"
           sourceLocatorId="org.eclipse.jdt.launching.sourceLocator.JavaSourceLookupDirector"
           sourcePathComputerId="org.eclipse.jdt.launching.sourceLookup.javaSourcePathComputer">
     </launchConfigurationType>
     <launchConfigurationType
           id="scala.interpreter"
           delegate="org.scalaide.core.internal.repl.InterpreterLaunchConfigurationDelegate"
           delegateName="Scala Interpreter Launcher"
           delegateDescription="The Scala Interpreter launcher supports running and debugging code through a Read-Eval-Print loop"
           modes="run,debug"
           sourceLocatorId="org.eclipse.jdt.launching.sourceLocator.JavaSourceLookupDirector"
           sourcePathComputerId="org.eclipse.jdt.launching.sourceLookup.javaSourcePathComputer"
           name="Scala Interpreter">
     </launchConfigurationType>
   </extension>
   <extension point="org.eclipse.debug.ui.launchConfigurationTypeImages">
     <launchConfigurationTypeImage
        icon="icons/full/etool16/scala_app.gif"
        configTypeID="scala.application"
        id="scala.application.images">
     </launchConfigurationTypeImage>
     <launchConfigurationTypeImage
           configTypeID="scala.interpreter"
           icon="icons/full/etool16/scala_app.gif"
           id="scala.interpreter.image">
     </launchConfigurationTypeImage>
   </extension>
   <extension point="org.eclipse.debug.ui.launchConfigurationTabGroups">
    <launchConfigurationTabGroup
        type="scala.application"
        class="org.scalaide.core.internal.launching.ApplicationTabGroup"
        id="scala.application.tabGroup">
    </launchConfigurationTabGroup>
    <launchConfigurationTabGroup
        type="scala.interpreter"
        class="org.scalaide.ui.internal.repl.InterpreterTabGroup"
        id="scala.interpreter.tabGroup">
        <launchMode
              mode="run"
              description="Runs an interpreter">
        </launchMode>
        <launchMode
              mode="debug"
              description="Runs an interpreter in Debug mode"
              perspective="org.eclipse.debug.ui.DebugPerspective">
        </launchMode>
    </launchConfigurationTabGroup>
   </extension>
   <extension id="scalanature"
         name="Scala Nature"
         point="org.eclipse.core.resources.natures">
      <runtime>
         <run class="org.scalaide.core.internal.project.Nature"/>
      </runtime>
      <builder id="org.scala-ide.sdt.core.scalabuilder"/>
      <requires-nature id="org.eclipse.jdt.core.javanature"/>
   </extension>
   <extension id="scalabuilder"
         name="Scala Builder"
         point="org.eclipse.core.resources.builders">
      <builder hasNature="true">
         <run class="org.scalaide.core.internal.builder.ScalaBuilder"/>
      </builder>
   </extension>
   <extension
         point="org.eclipse.ui.perspectiveExtensions">
      <perspectiveExtension targetID="org.scala-ide.sdt.core.perspective">
         <actionSet id="org.scala-ide.sdt.ui.scalaMenu.actionSet"/>
         <viewShortcut
               id="org.scala-ide.sdt.core.consoleView">
         </viewShortcut>
      </perspectiveExtension>
      <perspectiveExtension targetID="org.eclipse.jdt.ui.JavaPerspective">
         <perspectiveShortcut id="org.scala-ide.sdt.core.perspective"/>
      </perspectiveExtension>
      <perspectiveExtension targetID="org.eclipse.ui.resourcePerspective">
         <perspectiveShortcut id="org.scala-ide.sdt.core.perspective"/>
      </perspectiveExtension>
      <perspectiveExtension targetID="org.eclipse.debug.ui.DebugPerspective">
         <perspectiveShortcut id="org.scala-ide.sdt.core.perspective"/>
      </perspectiveExtension>
      <perspectiveExtension targetID="org.scala-ide.sdt.core.perspective">
         <perspectiveShortcut id="org.eclipse.debug.ui.DebugPerspective"/>
         <actionSet id="org.eclipse.debug.ui.breakpointActionSet" />
      </perspectiveExtension>
   </extension>
   <extension point="org.eclipse.ui.actionSetPartAssociations">
      <actionSetPartAssociation targetID="org.eclipse.jdt.ui.A_OpenActionSet">
      <part id="scala.tools.eclipse.ScalaSourceFileEditor"></part>
      </actionSetPartAssociation>
   </extension>
   <extension point="org.eclipse.help.toc">
      <toc file="toc.xml"
           primary="true"/>
   </extension>
   <extension
         point="org.eclipse.help.contexts">
         <contexts
         	file="docs/contexts.xml">
         </contexts>
   </extension>

  <extension
    id="javaelementfilters"
    point="org.eclipse.jdt.ui.javaElementFilters">
    <filter
      id="scala.tools.eclipse.javaelements.ScalaElementFilter"
      name="Scala element filter"
      description="Prevents Scala elements which are artefacts of the Scala to Java encoding from appearing in the Package Explorer"
      class="org.scalaide.ui.internal.jdt.model.ScalaElementFilter"
      enabled="true"/>
  </extension>

  <extension point="org.eclipse.ui.popupMenus">
    <objectContribution
            adaptable="true"
            objectClass="org.eclipse.jdt.core.IJavaElement"
            nameFilter="*"
            id="org.scala-ide.sdt.core.natures.contribution1">
         <menu
            label="Scala"
            path="additions"
            id="org.scala-ide.sdt.core.popupMenu">
            <groupMarker name="content"/>
            <separator name="additions"/>
        </menu>
      <visibility>
        <and>
          <objectState name="projectNature" value="org.scala-ide.sdt.core.scalanature"/>
          <or>
            <objectClass name="org.eclipse.jdt.core.IJavaProject"/>
            <objectClass name="org.eclipse.jdt.core.IPackageFragment"/>
          </or>
        </and>
      </visibility>
      </objectContribution>
    <objectContribution
          adaptable="true"
          id="org.scala-ide.sdt.core.restartScalaPresentationCompiler"
          nameFilter="*"
          objectClass="org.eclipse.core.resources.IProject">
        <action
             class="org.scalaide.ui.internal.actions.RestartPresentationCompilerAction"
             enablesFor="+"
             id="org.scala-ide.sdt.core.action.restartScalaPresentationCompiler"
             label="Restart Presentation Compiler"
             menubarPath="org.scala-ide.sdt.core.popupMenu/content"
             tooltip="Restart this project's Presentation Compiler">
        </action>
        <visibility>
            <objectState name="projectNature" value="org.scala-ide.sdt.core.scalanature"/>
      </visibility>
    </objectContribution>
    <objectContribution
      id="org.scala-ide.sdt.ui.interperter.start"
      objectClass="org.eclipse.jdt.core.IJavaElement">
      <action
        class="org.scalaide.ui.internal.actions.InterpreterAction"
        enablesFor="1"
        menubarPath="org.scala-ide.sdt.core.popupMenu/content"
        icon="icons/full/etool16/scala_app.gif"
        id="org.scala-ide.sdt.ui.createInt"
        label="Create Scala Interpreter"
        tooltip="Create a Scala interpreter"/>

      <visibility>
        <and>
          <objectState name="projectNature" value="org.scala-ide.sdt.core.scalanature"/>
          <or>
            <objectClass name="org.eclipse.jdt.core.IJavaProject"/>
            <objectClass name="org.eclipse.jdt.core.IPackageFragment"/>
          </or>
        </and>
      </visibility>


    </objectContribution>
    <objectContribution
          adaptable="true"
          id="org.scala-ide.sdt.core.addScalaLibrary"
          nameFilter="*"
          objectClass="org.eclipse.core.resources.IProject">
        <action
             class="org.scalaide.ui.internal.actions.AddScalaLibraryAction"
             enablesFor="+"
             id="org.scala-ide.sdt.core.action.addScalaLibrary"
             label="Add Scala Library to Build Path"
             menubarPath="org.scala-ide.sdt.core.popupMenu/content"
             tooltip="Add the Scala standard library to the project build path">
        </action>
        <visibility>
          <objectState name="projectNature" value="org.scala-ide.sdt.core.scalanature"/>
      </visibility>
        <enablement>
         	<test
              property="org.eclipse.core.resources.projectNature"
              value="org.eclipse.jdt.core.javanature">
            </test>
         </enablement>
    </objectContribution>
      <objectContribution
            adaptable="true"
            objectClass="org.eclipse.core.resources.IProject"
            nameFilter="*"
            id="org.scala-ide.sdt.core.natures.contribution1">
         <action
               class="org.scalaide.ui.internal.actions.ToggleScalaNatureAction"
               enablesFor="+"
               id="org.scala-ide.sdt.core.natures.ToggleNatureAction"
               label="Remove Scala Nature"
               menubarPath="org.scala-ide.sdt.core.popupMenu/content"
               tooltip="Removes a Scala Builder/Classpath from a Java project">
         </action>
         <visibility>
           <objectState name="projectNature" value="org.scala-ide.sdt.core.scalanature"/>
         </visibility>
         <enablement>
         	<test
              property="org.eclipse.core.resources.projectNature"
              value="org.eclipse.jdt.core.javanature">
            </test>
         </enablement>
    </objectContribution>

      <objectContribution
            adaptable="true"
            objectClass="org.eclipse.core.resources.IProject"
            nameFilter="*"
            id="org.scala-ide.sdt.core.natures.contribution2">
         <action
               class="org.scalaide.ui.internal.actions.ToggleScalaNatureAction"
               enablesFor="+"
               id="org.scala-ide.sdt.core.natures.ToggleNatureAction"
               icon="icons/full/etool16/newsprj_wiz.gif"
               label="Add Scala Nature"
               menubarPath="org.eclipse.ui.projectConfigure/additions"
               tooltip="Adds Scala builder / classpath to a project">
         </action>
         <visibility>
            <not>
              <objectState name="projectNature" value="org.scala-ide.sdt.core.scalanature"/>
            </not>
         </visibility>
         <enablement>
         	<test
              property="org.eclipse.core.resources.projectNature"
              value="org.eclipse.jdt.core.javanature">
            </test>
         </enablement>
      </objectContribution>
  </extension>


  <extension
         point="org.eclipse.ui.console.consoleFactories">
      <consoleFactory
            class="org.scalaide.ui.internal.repl.Factory"
            icon="icons/full/etool16/scala_app.gif"
            label="Scala Console"/>
   </extension>

  <extension
        point="org.eclipse.core.runtime.preferences">
     <initializer
           class="org.scalaide.ui.internal.preferences.ColourPreferenceInitializer">
     </initializer>
     <initializer
           class="org.scalaide.ui.internal.preferences.ScalaCompilerPreferenceInitializer">
     </initializer>
     <initializer
           class="org.scalaide.core.internal.formatter.ScalaFormatterPreferenceInitializer">
     </initializer>
     <initializer
           class="org.scalaide.ui.internal.preferences.OrganizeImportsPreferencesInitializer">
     </initializer>
     <initializer
           class="org.scalaide.ui.internal.preferences.ImplicitsPagePreferenceInitializer">
     </initializer>
     <initializer
           class="org.scalaide.logging.ui.preferences.LoggingPreferencePageInitializer">
     </initializer>
     <initializer
           class="org.scalaide.ui.internal.preferences.PreferenceInitializer">
     </initializer>
     <initializer
           class="org.scalaide.ui.internal.preferences.EditorPreferenceInitializer">
     </initializer>
     <initializer
           class="org.scalaide.ui.internal.migration.MigrationPreferenceInitializer">
     </initializer>
  </extension>

  <extension point="org.eclipse.core.expressions.propertyTesters">
     <propertyTester
           class="org.scalaide.core.internal.launching.ScalaLaunchableTester"
           id="scala.tools.eclipse.launching.ScalaLaunchableTester"
           namespace="scala.tools.eclipse.launching"
           properties="hasMain,canLaunchAsJUnit"
           type="org.eclipse.core.runtime.IAdaptable"/>
     <propertyTester
           class="org.scalaide.ui.internal.editor.TextSelectionTester"
           id="org.scalaide.ui.internal.editor.TextSelectionTester"
           namespace="org.scalaide.ui.internal.editor"
           properties="nonEmpty"
           type="org.eclipse.jface.text.ITextSelection">
     </propertyTester>
  </extension>

  <extension point="org.eclipse.debug.ui.launchShortcuts">
    <shortcut
      class="org.scalaide.core.internal.launching.ScalaLaunchShortcut"
      icon="icons/full/obj16/scu_obj.gif"
      id="org.eclipse.shortcut.scala"
      label="Scala Application"
      modes="run,debug">
      <contextualLaunch>
        <enablement>
          <with variable="selection">
            <count value="1" />
            <iterate>
              <and>
                <test property="org.eclipse.debug.ui.matchesPattern" value="*.scala"/>
                <test property="scala.tools.eclipse.launching.hasMain"/>
              </and>
            </iterate>
          </with>
        </enablement>
      </contextualLaunch>
    </shortcut>
      <shortcut
            label="Scala JUnit Test"
            icon="$nl$/icons/full/obj16/julaunch.gif"
            helpContextId="org.eclipse.jdt.junit.launch_shortcut"
            class="org.scalaide.core.internal.launching.ScalaJUnitLaunchShortcut"
            modes="run, debug"
            id="org.eclipse.shortcut.scala.junit">
         <contextualLaunch>
            <enablement>
               <with variable="selection">
                  <count value="1"/>
               	  <iterate>
                     <adapt type="org.eclipse.jdt.core.IJavaElement">
                     <test property="org.eclipse.jdt.core.isInJavaProject"/>
                     <test property="org.eclipse.jdt.launching.hasProjectNature" args="org.scala-ide.sdt.core.scalanature"/>
                     <test property="org.eclipse.jdt.core.hasTypeOnClasspath" value="junit.framework.Test"/>
                     <test property="scala.tools.eclipse.launching.canLaunchAsJUnit" forcePluginActivation="true"/>
		             </adapt>
		          </iterate>
               </with>
            </enablement>
         </contextualLaunch>
         <configurationType
               id="org.eclipse.jdt.junit.launchconfig">
         </configurationType>
         <description
               description="%DebugJUnitLaunchShortcut.description"
               mode="debug">
         </description>
         <description
               description="%RunJUnitLaunchShortcut.description"
               mode="run">
         </description>
      </shortcut>
  </extension>

  <extension point="org.eclipse.ui.commands">
    <category
      description="Scala editor category"
      id="scala.tools.eclipse.category"
      name="Scala Editor" />
    <command
      categoryId="scala.tools.eclipse.category"
      description="Run Scala Application"
      id="org.eclipse.shortcut.scala.run"
      name="Run Scala Application" />
    <command
      categoryId="scala.tools.eclipse.category"
      description="Debug Scala Application"
      id="org.eclipse.shortcut.scala.debug"
      name="Debug Scala Application" />
    <command
      categoryId="scala.tools.eclipse.category"
      description="Run Scala JUnit Test"
      id="org.eclipse.shortcut.scala.junit.run"
      name="Run Scala JUnit Test" />
    <command
      categoryId="scala.tools.eclipse.category"
      description="Debug Scala JUnit Test"
      id="org.eclipse.shortcut.scala.junit.debug"
      name="Debug Scala JUnit Test" />
  </extension>

  <extension point="org.eclipse.ui.bindings">
    <key
      commandId="org.eclipse.shortcut.scala.run"
      schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
      sequence="M2+M3+X S" />
    <key
      commandId="org.eclipse.shortcut.scala.debug"
      schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
      sequence="M2+M3+D S" />
    <key
      commandId="org.eclipse.shortcut.scala.junit.run"
      schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
      sequence="M2+M3+T R" />
    <key
      commandId="org.eclipse.shortcut.scala.junit.debug"
      schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
      sequence="M2+M3+T D" />
  </extension>

  <extension point="org.scala-ide.sdt.core.sourcefileprovider">
    <provider
      class="org.scalaide.core.internal.jdt.model.ScalaSourceFileProvider"
      file_extension="scala">
    </provider>
  </extension>

  <extension point="org.scala-ide.sdt.aspects.cuprovider">
    <provider
      class="org.scalaide.core.internal.jdt.model.ScalaCompilationUnitProvider"
      file_extension="scala">
    </provider>
  </extension>

  <extension point="org.scala-ide.sdt.aspects.cfprovider">
    <provider class="org.scalaide.core.internal.jdt.model.ScalaClassFileProvider" />
  </extension>

  <extension point="org.scala-ide.sdt.aspects.indexerprovider">
    <provider class="org.scalaide.core.internal.jdt.search.ScalaSourceIndexerFactory" />
  </extension>

  <extension point="org.scala-ide.sdt.aspects.spellingengineprovider">
    <provider class="org.scalaide.ui.internal.editor.ScalaSpellingEngineProvider" />
  </extension>

  <extension point="org.scala-ide.sdt.aspects.openactionprovider">
    <provider class="org.scalaide.ui.internal.actions.hyperlinks.OpenActionProvider" />
  </extension>

  <extension point="org.scala-ide.sdt.aspects.formatterCleanUp">
    <provider class="org.scalaide.core.internal.formatter.ScalaFormatterCleanUpProvider" />
  </extension>

  <extension point="org.scala-ide.sdt.aspects.method_verifier">
    <provider class="org.scalaide.core.internal.jdt.compiler.ScalaMethodVerifierProvider" />
  </extension>

  <extension point="org.scala-ide.sdt.aspects.imagedescriptorselector">
    <selector
      class="org.scalaide.ui.internal.jdt.model.ScalaImageDescriptorSelector">
    </selector>
  </extension>
  <extension
        point="org.eclipse.jdt.ui.quickFixProcessors">
     <quickFixProcessor
           class="org.scalaide.core.internal.quickfix.ScalaQuickFixProcessor"
           id="scala-plugin.quickFixProcessor1">
        <enablement>
          <with variable="projectNatures">
             <iterate operator="or">
                <or>
                  <equals value="org.scala-ide.sdt.core.scalanature"/>
                </or>
             </iterate>
          </with>
        </enablement>
     </quickFixProcessor>
  </extension>
 <extension
       point="org.eclipse.jdt.ui.quickAssistProcessors">
    <quickAssistProcessor
          class="org.scalaide.core.internal.quickfix.ScalaQuickAssistProcessor"
          id="org.scala-ide.sdt.core.quickAssistProcessor"
          name="Scala Quick Assist Processor">
        <enablement>
          <with variable="projectNatures">
             <iterate operator="or">
                <or>
                  <equals value="org.scala-ide.sdt.core.scalanature"/>
                </or>
             </iterate>
          </with>
        </enablement>
    </quickAssistProcessor>
 </extension>

  <!-- refactoring -->


  <extension
      point="org.eclipse.ui.commands">
   <category
         description="Refactorings"
         id="org.scalaide.ui.menu.refactoring"
         name="Refactor - Scala"/>
   <category
         description="Method Signature Refactorings"
         id="org.scalaide.ui.menu.refactoring.methodsignature"
         name="Method Signature Refactoring - Scala"/>
   <category
         id="org.scalaide.ui.menu"
         name="Menu - Scala">
   </category>
      <command
            categoryId="org.scalaide.ui.menu"
            description="Shows the refactor quick menu"
            id="org.scalaide.ui.menu.quickMenu"
            name="Refactor Quick Menu"/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring.methodsignature"
         id="org.scalaide.refactoring.SplitParameterLists"
         name="Split parameter lists" />
      <command
         categoryId="org.scalaide.ui.menu.refactoring.methodsignature"
         id="org.scalaide.refactoring.MergeParameterLists"
         name="Merge parameter lists" />
      <command
         categoryId="org.scalaide.ui.menu.refactoring.methodsignature"
         id="org.scalaide.refactoring.ChangeParameterOrder"
         name="Change parameter order" />
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.MoveConstructorToCompanionObject"
         name="Move constructor to companion object" />
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.ExtractTrait"
         name="Extract Trait" />
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.MoveClass"
         name="Move Class/Object/Trait"/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.ExtractLocal"
         name="Extract Local"/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.InlineLocal"
         name="Inline Local"/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.Extract"
         name="Extract..."/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.OrganizeImports"
         name="Organize Imports"/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.Rename"
         name="Rename"/>
      <command
         categoryId="org.scalaide.ui.menu.refactoring"
         id="org.scalaide.refactoring.ExpandCaseClassBinding"
         name="Expand Case Class Binding"/>
      <command
         categoryId="scala.tools.eclipse.category"
         id="org.scala-ide.sdt.core.commands.ToggleImplicitsDisplay"
         name="Toggle Implicits Display"/>
      <command
         categoryId="org.eclipse.debug.ui.category.run"
         id="org.scalaide.core.handler.RunSelection"
         name="Send Selection to Scala Interpreter"/>
      <command
         categoryId="scala.tools.eclipse.category"
         description="Shows the type of the current selection"
         id="scala.tools.eclipse.editor.ShowTypeOfSelection"
         name="Show Type">
      </command>
      <command
         categoryId="scala.tools.eclipse.category"
         description="Open an editor on the selected implicit conversion"
         id="scala.tools.eclipse.editor.OpenImplicit"
         name="Open Implicit">
      </command>
      <command
            categoryId="scala.tools.eclipse.category"
            description="Toggle Mark Occurences"
            id="org.scala-ide.sdt.core.toggleMarkOccurences"
            name="Toggle Mark Occurrences">
      </command>
      <command
            categoryId="scala.tools.eclipse.category"
            description="Show inferred semicolons in all text editors"
            id="org.scalaide.core.handler.showInferredSemicolons"
            name="Show inferred semicolons">
      </command>
      <command
            categoryId="scala.tools.eclipse.category"
            description="Show Indent Guide"
            id="org.scalaide.core.handler.indentGuide"
            name="Show Indent Guide">
      </command>
</extension>

   <extension point="org.eclipse.ui.contexts">
     <context name="Editing Scala Source"
              description="Scala source file editor"
              parentId="org.eclipse.jdt.ui.javaEditorScope"
              id="scala.tools.eclipse.scalaEditorScope" />
   </extension>

<extension
      point="org.eclipse.ui.bindings"> <!-- M1 == Ctrl/Cmd, M2 == Shift M3 == Alt -->
   <!-- Bindings to be replaced with Mac bindings like in the JDT (see http://dev.eclipse.org/viewcvs/viewvc.cgi/org.eclipse.jdt.ui/plugin.xml) -->
   <sequenceModifier find="M2+M3" replace="M1+M3" platforms="cocoa,carbon" />
   <key
         commandId="org.scalaide.ui.menu.quickMenu"
         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
         contextId="scala.tools.eclipse.scalaEditorScope"
         sequence="M2+M3+T"/>
   <key
   		 commandId="org.scalaide.refactoring.ExtractLocal"
   		 schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
   		 contextId="scala.tools.eclipse.scalaEditorScope"
   		 sequence="M2+M3+L"/>
   <key
   		 commandId="org.scalaide.refactoring.InlineLocal"
   		 schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
   		 contextId="scala.tools.eclipse.scalaEditorScope"
   		 sequence="M2+M3+I"/>
   <key
   		 commandId="org.scalaide.refactoring.Extract"
   		 schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
   		 contextId="scala.tools.eclipse.scalaEditorScope"
   		 sequence="M2+M3+E"/>
   <key
   		 commandId="org.scalaide.refactoring.Rename"
   		 schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
   		 contextId="scala.tools.eclipse.scalaEditorScope"
   		 sequence="M2+M3+R"/>
   <key
         commandId="scala.tools.eclipse.editor.ShowTypeOfSelection"
         contextId="scala.tools.eclipse.scalaEditorScope"
         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
         sequence="M2+M1+W T"/>
   <key
         commandId="scala.tools.eclipse.editor.OpenImplicit"
         contextId="scala.tools.eclipse.scalaEditorScope"
         schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
         sequence="M3+F3"/>
   </extension>
   <extension point="org.eclipse.ui.bindings"> <!-- Cross-platform bindings -->
   <key
   		 commandId="org.scalaide.refactoring.OrganizeImports"
   		 schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
   		 contextId="scala.tools.eclipse.scalaEditorScope"
   		 sequence="M1+M2+O"/>
   <key
       commandId="org.scala-ide.sdt.core.commands.ToggleImplicitsDisplay"
       schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
       contextId="scala.tools.eclipse.scalaEditorScope"
       sequence="M1+M2+I"/>
   <key
       commandId="org.scalaide.core.handler.RunSelection"
       schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"
       contextId="scala.tools.eclipse.scalaEditorScope"
       sequence="M1+M2+X"/>
   </extension>

  <!-- templates -->
  <extension
      point="org.eclipse.ui.editors.templates">
    <contextType
        class="org.scalaide.ui.internal.templates.ScalaTemplateContextType"
        id="org.scala-ide.sdt.core.templates"
        name="Scala">
    </contextType>
    <include
        file="templates/default-templates.xml">
    </include>
    <include
          file="templates/wizard-templates.xml">
    </include>
  </extension>

 <extension
       point="org.eclipse.ui.handlers">
    <handler
          class="org.scalaide.ui.internal.editor.decorators.implicits.ToggleImplicitsDisplayHandler"
          commandId="org.scala-ide.sdt.core.commands.ToggleImplicitsDisplay">
    </handler>
    <handler
          class="org.scalaide.ui.internal.actions.ShowTypeOfSelectionCommand"
          commandId="scala.tools.eclipse.editor.ShowTypeOfSelection">
    </handler>
    <handler
          class="org.scalaide.ui.internal.actions.hyperlinks.OpenImplicitCommand"
          commandId="scala.tools.eclipse.editor.OpenImplicit">
    </handler>
    <handler
          class="org.scalaide.ui.internal.editor.decorators.markoccurrences.ToggleMarkOccurrencesHandler"
          commandId="org.scala-ide.sdt.core.toggleMarkOccurences">
    </handler>
    <handler
          class="org.scalaide.ui.internal.editor.decorators.semicolon.ShowInferredSemicolonsHandler"
          commandId="org.scalaide.core.handler.showInferredSemicolons">
    </handler>
    <handler
          class="org.scalaide.ui.internal.editor.decorators.indentguide.IndentGuideHandler"
          commandId="org.scalaide.core.handler.indentGuide">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.ExpandCaseClassBinding"
          commandId="org.scalaide.refactoring.ExpandCaseClassBinding">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.method.ChangeParameterOrder"
          commandId="org.scalaide.refactoring.ChangeParameterOrder">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.method.MergeParameterLists"
          commandId="org.scalaide.refactoring.MergeParameterLists">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.method.SplitParameterLists"
          commandId="org.scalaide.refactoring.SplitParameterLists">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.rename.Rename"
          commandId="org.scalaide.refactoring.Rename">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.OrganizeImports"
          commandId="org.scalaide.refactoring.OrganizeImports">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.InlineLocal"
          commandId="org.scalaide.refactoring.InlineLocal">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.extract.Extract"
          commandId="org.scalaide.refactoring.Extract">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.move.MoveClass"
          commandId="org.scalaide.refactoring.MoveClass">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.ExtractTrait"
          commandId="org.scalaide.refactoring.ExtractTrait">
    </handler>
    <handler
          class="org.scalaide.refactoring.internal.MoveConstructorToCompanionObject"
          commandId="org.scalaide.refactoring.MoveConstructorToCompanionObject">
    </handler>
    <handler
          class="org.scalaide.ui.internal.actions.RunSelection"
          commandId="org.scalaide.core.handler.RunSelection">
    </handler>
 </extension>
 <extension
       point="org.eclipse.ui.menus">
    <menuContribution
          locationURI="toolbar:org.eclipse.ui.main.toolbar?after=additions">
       <toolbar
             id="org.scala-ide.sdt.core.toolbar"
             label="Scala Text Editor">
          <command
                commandId="org.scala-ide.sdt.core.commands.ToggleImplicitsDisplay"
                icon="icons/full/elcl16/implicit_co.gif"
                id="org.scala-ide.sdt.core.toolbar.ToggleImplicitsDisplay"
                label="Toggle Implicits Display"
                style="toggle">
          </command>
          <command
                commandId="org.scala-ide.sdt.core.toggleMarkOccurences"
                icon="icons/full/etool16/mark_occurrences.png"
                id="org.scala-ide.sdt.core.toolbar.ToggleMarkOccurences"
                label="Toggle Mark Occurrences"
                style="toggle">
          </command>
          <command
                commandId="org.scalaide.core.handler.showInferredSemicolons"
                icon="icons/show_inferred_semicolons.png"
                label="Show inferred semicolons"
                style="toggle">
          </command>
          <command
                commandId="org.scalaide.core.handler.indentGuide"
                icon="icons/indent_guide.png"
                label="Show Indent Guide"
                style="toggle">
          </command>
          <command
                commandId="org.scalaide.core.handler.RunSelection"
                disabledIcon="icons/full/dtool16/run_interpreter.gif"
                icon="icons/full/etool16/run_interpreter.gif"
                label="Run Selection in Scala Interpreter"
                style="push"
                tooltip="Run Selection in Scala Interpreter">
          </command>
       </toolbar>
    </menuContribution>
    <menuContribution
          locationURI="menu:navigate?after=open.ext">
       <command
             commandId="scala.tools.eclipse.editor.OpenImplicit"
             id="one"
             label="Open Implicit"
             mnemonic="I"
             style="push"
             tooltip="Open an editor on the selected implicit conversion">
          <visibleWhen
                checkEnabled="false">
             <with
                   variable="activeEditorId">
                <equals
                      value="scala.tools.eclipse.ScalaSourceFileEditor">
                </equals>
             </with>
          </visibleWhen>
       </command>
    </menuContribution>
    <menuContribution
          locationURI="popup:#CompilationUnitEditorContext?before=additions">
       <command
             commandId="scala.tools.eclipse.editor.ShowTypeOfSelection"
             id="one"
             label="Show Type"
             mnemonic="S"
             style="push"
             tooltip="Shows the type of the current selection">
          <visibleWhen
                checkEnabled="false">
             <with
                   variable="activeEditorId">
                <equals
                      value="scala.tools.eclipse.ScalaSourceFileEditor">
                </equals>
             </with>
          </visibleWhen>
       </command>
    </menuContribution>
    <menuContribution
          locationURI="popup:#CompilationUnitEditorContext?before=additions">
       <command
             commandId="scala.tools.eclipse.editor.OpenImplicit"
             id="two"
             label="Open Implicit"
             mnemonic="I"
             style="push"
             tooltip="Open an editor on the selected implicit conversion">
          <visibleWhen
                checkEnabled="false">
             <with
                   variable="activeEditorId">
                <equals
                      value="scala.tools.eclipse.ScalaSourceFileEditor">
                </equals>
             </with>
          </visibleWhen>
       </command>
    </menuContribution>
    <menuContribution
          allPopups="false"
          locationURI="menu:org.eclipse.ui.main.menu?after=edit">
       <menu
             id="org.scalaide.ui.menu.refactoring"
             label="Refactor">
          <command
                commandId="org.scalaide.refactoring.ExpandCaseClassBinding"
                label="Expand Case Class Binding"
                style="push"
                tooltip="Expand Case Class Binding">
          </command>
          <separator
                name="org.scalaide.refactoring.separator.methodSignatureGroup"
                visible="true">
          </separator>
          <command
                commandId="org.scalaide.refactoring.ChangeParameterOrder"
                label="Change parameter order"
                style="push"
                tooltip="Change parameter order">
          </command>
          <command
                commandId="org.scalaide.refactoring.MergeParameterLists"
                label="Merge parameter lists"
                style="push"
                tooltip="Merge parameter lists">
          </command>
          <command
                commandId="org.scalaide.refactoring.SplitParameterLists"
                label="Split parameter lists"
                style="push"
                tooltip="Split parameter lists">
          </command>
          <separator
                name="org.scalaide.refactoring.separator.codeExtractionGroup"
                visible="true">
          </separator>
          <command
                commandId="org.scalaide.refactoring.Extract"
                label="Extract..."
                style="push"
                tooltip="Extract...">
          </command>
          <separator
                name="org.scalaide.refactoring.separator.sourceGeneratorGroup"
                visible="true">
          </separator>
          <command
                commandId="org.scalaide.refactoring.Rename"
                label="Rename"
                style="push"
                tooltip="Rename">
          </command>
          <command
                commandId="org.scalaide.refactoring.OrganizeImports"
                label="Organize Imports"
                style="push"
                tooltip="Organize Imports">
          </command>
          <command
                commandId="org.scalaide.refactoring.InlineLocal"
                label="Inline Local"
                style="push"
                tooltip="Inline Local">
          </command>
          <command
                commandId="org.scalaide.refactoring.ExtractLocal"
                label="Extract Local"
                style="push"
                tooltip="Extract Local">
          </command>
          <command
                commandId="org.scalaide.refactoring.MoveClass"
                label="Move Class/Object/Trait"
                style="push"
                tooltip="Move Class/Object/Trait">
          </command>
          <command
                commandId="org.scalaide.refactoring.ExtractTrait"
                label="Extract Trait"
                style="push"
                tooltip="Extract Trait">
          </command>
          <command
                commandId="org.scalaide.refactoring.MoveConstructorToCompanionObject"
                label="Move constructor to companion object"
                style="push"
                tooltip="Move constructor to companion object">
          </command>
       </menu>
    </menuContribution>
 </extension>

 <extension point="org.eclipse.jdt.ui.javaCompletionProposalComputer"
   id="scala.tools.eclipse.TemplateCompletionProposalComputer"
   name="Template Completion Proposal Computer">
   <javaCompletionProposalComputer
      class="org.scalaide.ui.internal.templates.TemplateCompletionProposalComputer"
      categoryId="org.eclipse.jdt.ui.templateProposalCategory">
      <partition type="__dftl_partition_content_type"/>
   </javaCompletionProposalComputer>
 </extension>
   <extension
       id="scala_completions"
       name="Scala Completions"
       point="org.eclipse.jdt.ui.javaCompletionProposalComputer">
    <proposalCategory
          icon="icons/scala.png">
    </proposalCategory>
 </extension>
 <extension
       id="scala.tools.eclipse.ui.ScalaCompletionProposalComputer"
       name="Scala Completion Proposal Computer"
       point="org.eclipse.jdt.ui.javaCompletionProposalComputer">
    <javaCompletionProposalComputer
          categoryId="org.scala-ide.sdt.core.scala_completions"
          class="org.scalaide.ui.internal.completion.ScalaCompletionProposalComputer">
       <partition
             type="__dftl_partition_content_type">
       </partition>
    </javaCompletionProposalComputer>
 </extension>
 <extension
       id="scala.tools.eclipse.consoleView"
       point="org.eclipse.ui.views">
    <view
          allowMultiple="true"
          category="org.scala-ide.sdt.core.viewCategory"
          class="org.scalaide.ui.internal.repl.ReplConsoleView"
          icon="icons/full/etool16/scala_app.gif"
          id="org.scala-ide.sdt.core.consoleView"
          name="Scala Interpreter"
          restorable="false">
    </view>
    <category
          id="org.scala-ide.sdt.core.viewCategory"
          name="Scala">
    </category>
 </extension>
 <extension
       id="scala_java_completions"
       name="Scala Completions (Java sources)"
       point="org.eclipse.jdt.ui.javaCompletionProposalComputer">
    <proposalCategory
          icon="icons/scala.png">
    </proposalCategory>
 </extension>
 <extension
       id="JavaTraitMembersCompletions"
       name="Scala Trait Member Completions for Java"
       point="org.eclipse.jdt.ui.javaCompletionProposalComputer">
    <javaCompletionProposalComputer
          activate="false"
          categoryId="org.scala-ide.sdt.core.scala_java_completions"
          class="org.scalaide.core.internal.completion.ScalaJavaCompletionProposalComputer">
       <partition
             type="__dftl_partition_content_type">
       </partition>
    </javaCompletionProposalComputer>
 </extension>
 <extension
       point="org.scala-ide.sdt.core.reconciliationParticipants">
    <participant
          class="org.scalaide.ui.internal.editor.decorators.semantichighlighting.ImplicitHighlighter"
          id="org.scala-ide.sdt.core.SemanticHighlightingPresenter"
          name="Semantic Highlighting">
    </participant>
 </extension>
 <extension
       point="org.eclipse.ltk.core.refactoring.moveParticipants">
    <moveParticipant
          class="org.scalaide.refactoring.internal.move.ScalaMoveParticipant"
          id="org.scala-ide.sdt.core.moveParticipant"
          name="Scala Move Participant">
       <enablement>
          <with variable="element">
             <instanceof
                   value="org.eclipse.core.resources.IResource">
             </instanceof>
          </with>
       </enablement>
    </moveParticipant>
 </extension>
 <extension
       point="org.eclipse.jdt.junit.internal_testKinds">
       <!-- This extension point is copied from org.eclipse.jdt.junit.core, including the troubling questions. -->
    <kind
          displayName="Scala JUnit 4"
          id="org.scala-ide.sdt.core.junit"
          finderClass="org.scalaide.core.internal.launching.JUnit4TestFinder"
          loaderPluginId="org.eclipse.jdt.junit4.runtime"
          loaderClass="org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader">
         <runtimeClasspathEntry pluginId="org.eclipse.jdt.junit4.runtime" />
         <!-- TODO: do we need these? -->
         <runtimeClasspathEntry pluginId="org.eclipse.jdt.junit.core" />
         <runtimeClasspathEntry pluginId="org.eclipse.jdt.junit.runtime"/>
         <!-- END : do we need these? -->
    </kind>
 </extension>
 <extension
       point="org.eclipse.ui.decorators">
    <decorator
          class="org.scalaide.ui.internal.explorer.ScalaDecorator"
          id="scala.tools.eclipse.ui.ScalaDecorator"
          label="Scala Decorations"
          state="true"
          lightweight="true">
       <description>
          Shows Scala specific icons
       </description>
    </decorator>
 </extension>
 <extension
       point="org.scala-ide.sdt.core.fileCreator">
    <fileCreator
          class="org.scalaide.ui.wizards.ClassCreator"
          description="Create a Scala Class"
          icon="icons/full/etool16/newclass_wiz.gif"
          id="org.scalaide.ui.wizards.classCreator"
          name="Scala Class"
          templateId="org.scalaide.core.templates.wizards.class">
    </fileCreator>
    <fileCreator
          class="org.scalaide.ui.wizards.TraitCreator"
          description="Create a Scala Trait"
          icon="icons/full/etool16/newtrait_wiz.gif"
          id="org.scalaide.ui.wizards.traitCreator"
          name="Scala Trait"
          templateId="org.scalaide.core.templates.wizards.trait">
    </fileCreator>
    <fileCreator
          class="org.scalaide.ui.wizards.ObjectCreator"
          description="Create a Scala Object"
          icon="icons/full/etool16/newobject_wiz.gif"
          id="org.scalaide.ui.wizards.objectCreator"
          name="Scala Object"
          templateId="org.scalaide.core.templates.wizards.object">
    </fileCreator>
    <fileCreator
          class="org.scalaide.ui.wizards.PackageObjectCreator"
          description="Create a Scala Package Object"
          icon="icons/full/etool16/newpackage_object_wiz.png"
          id="org.scalaide.ui.wizards.packageObjectCreator"
          name="Scala Package Object"
          templateId="org.scalaide.core.templates.wizards.packageObject">
    </fileCreator>
    <fileCreator
          class="org.scalaide.ui.wizards.AppCreator"
          description="Create a Scala App"
          icon="icons/full/etool16/scala_app.gif"
          id="org.scalaide.ui.wizards.appCreator"
          name="Scala App"
          templateId="org.scalaide.core.templates.wizards.app">
    </fileCreator>
    <fileCreator
          class="org.scalaide.ui.wizards.EmptyFileCreator"
          description="Creates an empty file"
          icon="icons/full/etool16/newfile_wiz.gif"
          id="org.scalaide.ui.wizards.empty"
          name="Empty File"
          templateId="org.scalaide.core.templates.wizards.empty">
    </fileCreator>
    <fileCreator
          class="org.scalaide.ui.wizards.ClassCreator"
          description="Create a Scala File"
          icon="icons/full/etool16/newclass_wiz.gif"
          id="org.scalaide.ui.wizards.scalaCreator"
          name="New Scala File"
          templateId="org.scalaide.core.templates.wizards.class">
    </fileCreator>
 </extension>
 <extension
       point="org.eclipse.ui.themes">
    <themeElementCategory
          id="org.scalaide.ui.theme"
          label="Scala">
       <description>
          Scala IDE related fonts and colors.
       </description>
    </themeElementCategory>
    <fontDefinition
          categoryId="org.scalaide.ui.theme"
          id="org.scalaide.ui.font.hover"
          label="Hover Font">
       <description>
          The font used for all Scala hovers.
       </description>
    </fontDefinition>
 </extension>
</plugin>
